---
export interface Props {
  articleData: ArticleData;
  cardStyles?: React.CSSProperties;
  cardTheme?: CardTheme;
  tags?: string[];
  className?: string;
}
const {
  articleData,
  cardStyles = {},
  cardTheme = {},
  tags = [],
  className = "",
} = Astro.props;

import TagFilter from "../TagFilter.astro";
import CardLink from "./CardLink.astro";
import type { ArticleData, CardTheme } from "./types";
---

<div
  class={`shadow-xl hover:shadow-2xl card-shadow-transition border-0 transition-all duration-500 ease-out rounded-2xl backface-hidden ${cardTheme.backgroundClass || ""} ${className}`}
  style={{
    ...cardStyles,
    // transform,
  }}
>
  <div class="md:p-8 relative z-10 flex flex-col h-auto p-4">
    <div class="flex">
      <div class="mr-6 flex-shrink-0">
        <div class="card-decorative-line"></div>
      </div>
      <div class="w-full">
        <div class="card-title">{articleData.title}</div>
        {
          tags && tags.length > 0 && (
            <div class="mt-4 mb-4">
              <TagFilter
                tags={tags.map((tag: string) => ({ tag, size: 1 }))}
                type="cards"
                usedFor="detail"
              />
            </div>
          )
        }
      </div>
    </div>
    <div class="flex-1 min-h-0">
      <slot />
    </div>
    <div
      class="border-t border-gray-200/20 pt-4 mt-4 flex-shrink-0 overflow-hidden"
    >
      <div class="flex-1 min-w-0">
        <div class="card-key-point text-sm flex items-center gap-1 justify-end">
          <div class="text-sm flex-shrink-0">Source:</div>
          <div class="min-w-0">
            <CardLink title={articleData.title} url={articleData.url || ""} />
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
